<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('countries', function (Blueprint $table) {
            if (config('world.use_uuid')) {
                $table->uuid('id')->primary();
            } else {
                $table->id();
            }

            $table->string('name');
            $table->string('slug');
            $table->string('iso3', 10)->nullable();
            $table->string('iso2', 10)->nullable();
            $table->unsignedSmallInteger('numeric_code')->nullable();
            $table->string('phone_code', 50)->nullable();
            $table->string('capital')->nullable();
            $table->string('currency', 10)->nullable();
            $table->string('currency_name')->nullable();
            $table->string('currency_symbol', 10)->nullable();
            $table->string('tld', 10)->nullable();
            $table->string('native')->nullable();
            $table->string('region')->nullable();
            $table->string('subregion')->nullable();
            $table->text('timezones')->nullable();
            $table->string('latitude', 20)->nullable();
            $table->string('longitude', 20)->nullable();
            $table->string('emoji', 10)->nullable();
            $table->string('emojiU', 20)->nullable();
        });

        Schema::create('states', function (Blueprint $table) {
            if (config('world.use_uuid')) {
                $table->uuid('id')->primary();
            } else {
                $table->id();
            }

            $table->string('name');
            $table->string('slug');
            $table->string('country_code', 10)->nullable();
            $table->string('country_name')->nullable();
            $table->string('state_code', 10)->nullable();
            $table->string('type')->nullable();
            $table->string('latitude', 20)->nullable();
            $table->string('longitude', 20)->nullable();

            if (config('world.use_uuid')) {
                $table->foreignUuid('country_id')->constrained('countries')->cascadeOnDelete()->cascadeOnUpdate();
            } else {
                $table->foreignId('country_id')->constrained('countries')->cascadeOnDelete()->cascadeOnUpdate();
            }
        });

        Schema::create('cities', function (Blueprint $table) {
            if (config('world.use_uuid')) {
                $table->uuid('id')->primary();
            } else {
                $table->id();
            }

            $table->string('name');
            $table->string('slug');
            $table->string('state_code', 10)->nullable();
            $table->string('state_name')->nullable();
            $table->string('country_code', 10)->nullable();
            $table->string('country_name')->nullable();
            $table->string('latitude', 20)->nullable();
            $table->string('longitude', 20)->nullable();
            $table->string('wikiDataId', 20)->nullable();

            if (config('world.use_uuid')) {
                $table->foreignUuid('country_id')->constrained('countries')->cascadeOnDelete()->cascadeOnUpdate();
                $table->foreignUuid('state_id')->constrained('states')->cascadeOnDelete()->cascadeOnUpdate();
            } else {
                $table->foreignId('country_id')->constrained('countries')->cascadeOnDelete()->cascadeOnUpdate();
                $table->foreignId('state_id')->constrained('states')->cascadeOnDelete()->cascadeOnUpdate();
            }
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('cities');
        Schema::dropIfExists('states');
        Schema::dropIfExists('countries');
    }
};
